<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>tech.hiphone</groupId>
    <artifactId>app-skeleton</artifactId>
    <version>0.0.1</version>
  </parent>
  <artifactId>app</artifactId>

  <properties>
    <base-package>tech.hiphone.app</base-package>
    <start-class>${base-package}.Application</start-class>
    <openapi-generator-maven-plugin.version>6.0.1</openapi-generator-maven-plugin.version>
    <jackson-databind-nullable.version>0.2.3</jackson-databind-nullable.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>tech.hiphone</groupId>
        <artifactId>dependencies</artifactId>
        <version>${app-framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>tech.hiphone</groupId>
      <artifactId>framework</artifactId>
    </dependency>

    <dependency>
      <groupId>tech.hiphone</groupId>
      <artifactId>app-commons</artifactId>
      <version>${app-framework.version}</version>
    </dependency>

    <dependency>
      <groupId>tech.hiphone</groupId>
      <artifactId>admin-page</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- cache -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-jcache</artifactId>
    </dependency>

    <!-- commons -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>

    <dependency>
      <groupId>org.zalando</groupId>
      <artifactId>problem-spring-web</artifactId>
    </dependency>

    <!-- data -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <!-- apache commons -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <!-- open api -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-webmvc-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>${jackson-databind-nullable.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>1.6.14</version>
    </dependency>

    <!-- test -->
    <dependency>
      <groupId>tech.hiphone</groupId>
      <artifactId>test</artifactId>
      <version>${app-framework.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <build>
    <defaultGoal>spring-boot:run</defaultGoal>
    <finalName>app</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <!-- Plugin that provides API-first development using openapi-generator-cli to generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file -->
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>

        <!-- war 打包 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
          <executions>
            <execution>
              <id>default-war</id>
              <goals>
                <goal>war</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
          <configuration>
            <warSourceIncludes>WEB-INF/**,META-INF/**</warSourceIncludes>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <!-- 检查环境 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
            </execution>
            <execution>
              <id>enforce-dependencyConvergence</id>
              <configuration>
                <rules>
                  <DependencyConvergence />
                </rules>
                <fail>false</fail>
              </configuration>
              <goals>
                <goal>enforce</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <rules>
              <requireMavenVersion>
                <message>You are running an older version of Maven. Requires at
                  least Maven ${maven.version}</message>
                <version>[${maven.version},)</version>
              </requireMavenVersion>
              <requireJavaVersion>
                <message>You are running an incompatible version of Java.
                  Supports JDK 8 to 16.</message>
                <version>[11,)</version>
              </requireJavaVersion>
            </rules>
          </configuration>
        </plugin>

        <!-- 资源文件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <executions>
            <execution>
              <id>default-resources</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                <useDefaultDelimiters>false</useDefaultDelimiters>
                <delimiters>
                  <delimiter>#</delimiter>
                </delimiters>
                <resources>
                  <resource>
                    <directory>src/main/resources/</directory>
                    <filtering>true</filtering>
                    <includes>
                      <include>config/*.yml</include>
                    </includes>
                  </resource>
                  <resource>
                    <directory>src/main/resources/</directory>
                    <filtering>false</filtering>
                    <excludes>
                      <exclude>config/*.yml</exclude>
                    </excludes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <!-- Force alphabetical order to have a reproducible build -->
            <runOrder>alphabetical</runOrder>
            <excludes>
              <exclude>**/*IT*</exclude>
              <exclude>**/*IntTest*</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <configuration>
            <!-- Due to spring-boot repackage, without adding this property test classes are not found See https://github.com/spring-projects/spring-boot/issues/6254 -->
            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
            <!-- Force alphabetical order to have a reproducible build -->
            <runOrder>alphabetical</runOrder>
            <includes>
              <include>**/*IT*</include>
              <include>**/*IntTest*</include>
            </includes>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Plugin that provides API-first development using openapi-generator to generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file -->
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <inputSpec>${project.basedir}/src/main/resources/swagger/api.yml</inputSpec>
                <generatorName>spring</generatorName>
                <apiPackage>${base-package}.web.api</apiPackage>
                <modelPackage>${base-package}.service.api.dto</modelPackage>
                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                <importMappings>Problem=org.zalando.problem.Problem</importMappings>
                <skipValidateSpec>false</skipValidateSpec>
                <configOptions>
                  <delegatePattern>true</delegatePattern>
                  <title>app</title>
                </configOptions>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <mainClass>${start-class}</mainClass>
            <fork>true</fork>
            <!-- Enable the line below to have remote debugging of your application on port 5005 <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments> -->
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>api-docs</id>
      <properties>
        <profile.api-docs>,api-docs</profile.api-docs>
      </properties>
    </profile>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>
      <properties>
        <!-- default Spring profiles -->
        <spring.profiles.active>dev</spring.profiles.active>
      </properties>
    </profile>

    <profile>
      <id>prod</id>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <configuration>
              <filesets>
                <fileset>
                  <directory>target/classes/static/</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-info</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- <plugin> <groupId>pl.project13.maven</groupId> <artifactId>git-commit-id-plugin</artifactId> </plugin> -->
        </plugins>
      </build>
      <properties>
        <spring.profiles.active>prod</spring.profiles.active>
      </properties>
    </profile>

    <profile>
      <id>war</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <properties>
      </properties>
    </profile>
  </profiles>
</project>